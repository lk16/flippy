name: Lint and test

on: [push, pull_request]

jobs:
  python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11.3
      uses: actions/setup-python@v5
      with:
        python-version: '3.11.3'
    - uses: pdm-project/setup-pdm@v3
      name: Setup PDM
      with:
        python-version: "3.11.3"         # Version range or exact version of a Python version to use, the same as actions/setup-python
        architecture: x64                # The target architecture (x86, x64) of the Python interpreter. the same as actions/setup-python
        version: head
        prerelease: false                # Allow prerelease versions of PDM to be installed
        enable-pep582: false             # Enable PEP 582 package loading globally
        allow-python-prereleases: false  # Allow prerelease versions of Python to be installed. For example if only 3.12-dev is available, 3.12 will fallback to 3.12-dev
    - name: Install dependencies
      run: |
        cd python/flippy
        pdm install
    - name: Run linters
      run: |
        cd python/flippy
        pdm add pre-commit &&
        SKIP=golangci-lint,cargo-check,cargo-fmt,cargo-clippy pdm run pre-commit run --all-files
    - name: Run Python tests
      run: |
        cd python/flippy
        pdm install --production
        pdm run pytest --color=yes --cov=src/flippy --cov-report=term-missing -x -vv

  go:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: pg-test-user
          POSTGRES_PASSWORD: pg-test-password
          POSTGRES_DB: pg-test-db
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6380:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version: 1.24.2

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v7
      with:
        version: v2.1.5

    # Initialize database schema and test data
    - name: Initialize database
      run: |
        PGPASSWORD=pg-test-password psql -h localhost -p 5433 -U pg-test-user -d pg-test-db < ./schema.sql
        PGPASSWORD=pg-test-password psql -h localhost -p 5433 -U pg-test-user -d pg-test-db < ./test_data.sql

    # Run tests
    - name: Run tests
      env:
        FLIPPY_REDIS_URL: 'redis://localhost:6380'
        FLIPPY_POSTGRES_URL: 'postgres://pg-test-user:pg-test-password@localhost:5433/pg-test-db?sslmode=disable'
        FLIPPY_BOOK_SERVER_HOST: 'localhost'
        FLIPPY_BOOK_SERVER_PORT: '3000'
        FLIPPY_BOOK_SERVER_BASIC_AUTH_USER: 'test-user'
        FLIPPY_BOOK_SERVER_BASIC_AUTH_PASS: 'test-password'
        FLIPPY_BOOK_SERVER_TOKEN: 'test-token'
        FLIPPY_BOOK_SERVER_PREFORK: 'false'
        FLIPPY_BOOK_SERVER_STATIC_DIR: '${{ github.workspace }}/static'
      run: |
        go test -v ./internal/...


  rust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build
        run: |
          cd wasm
          ./build.sh
      - name: Run linters
        run: |
          cd wasm
          pip install pre-commit
          pre-commit run -a cargo-check
          pre-commit run -a cargo-fmt
          pre-commit run -a cargo-clippy
